name: Deploy Website

on:
  push:
    branches:
      - master
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jinja2
      
      - name: Install LaTeX
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive texlive-latex-extra texlive-humanities tex4ht cm-super
      
      - name: Build site
        run: |
          chmod +x ./build.sh
          # Add debug info
          echo "Current directory: $(pwd)"
          echo "Contents of tex4ht directory:"
          ls -la tex4ht/
          
          # Run build script with proper error capturing
          ./build.sh
          
          # Verify build artifacts were created properly
          if [ ! -d "compiled" ] || [ ! -f "compiled/index.html" ]; then
            echo "ERROR: Critical build artifacts missing, failing deployment"
            exit 1
          fi
          
          # Verify PDF files were created properly
          if [ ! -f "compiled/cv.pdf" ] || [ ! -f "compiled/cv_ac.pdf" ]; then
            echo "ERROR: PDF files are missing!"
            echo "Contents of compiled directory:"
            ls -la compiled/
            echo "Checking LaTeX logs for errors:"
            cat compiled/cv.log || echo "cv.log not found"
            exit 1
          fi
          
          echo "Verified that all build artifacts exist"
          
          # Prepare for deployment (same as in update.sh but without git operations)
          rm -rf dist
          mkdir dist
          echo "thomasahle.com" > dist/CNAME
          cp -r static dist
          cp -r feature_imgs dist
          cp -r papers dist
          cp -r blog dist
          cp compiled/*.html dist
          cp compiled/*.pdf dist
          cp compiled/blog/*.html dist/blog
          cp compiled/blog/*.css dist/blog
          cp -r compiled/teaching dist/teaching
          
          rm -rf compiled
      
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4